@model Crosscutting.Entity.TiendaVirtualDTO

@{
    Layout = null;
    ViewBag.Title = "Create";
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Crear Tienda Virtual</h4>
</div>
<br />
@using (Html.BeginForm("Create", "TiendaVirtual", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dominio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Dominio, new { htmlAttributes = new { @class = "form-control" } } )
                <div id="errores"></div>
                 @Html.ValidationMessageFor(model => model.Dominio, "", new { @class = "text-danger" })
            </div><p ><h4><strong>.chebay.com</strong></h4></p>
            
        </div>
        

     

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                    <input class="form-control" type="file" id="Logo" name="Logo" accept="image/*" required />
                    @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
                
            </div>
        </div>
       

        @*<div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Estado)
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Css, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Css,  new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Css, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.StringConection, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StringConection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StringConection, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="modal-footer">
            <input type="submit" id="crear_subasta" value="Crear" class="btn btn-default" />
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")

<script>
    $(document).ready(function () {

        $('#crear_subasta').addClass('disabled');

        $("#Dominio").change(function() {
            var retorno = $("#errores");
            retorno.html('');

            var dominio = $("#Dominio").val();
            var myActionUrl = '@Url.Action("ExisteDominio", "TiendaVirtual")';

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: myActionUrl,
                data: {
                    "dominio": dominio,
                },
                dataType: "json",
                success: function (Result) {
                    if(Result.toString()=="true")
                    {
                        if (!$('#crear_subasta').hasClass('disabled')) $('#crear_subasta').addClass('disabled');
                        
                        $("#Dominio").css("border", "1px solid red");
                        retorno.css("color", "white");
                        retorno.css("background", "red");
                        retorno.html('<span>&nbsp<i class="fa fa-times"></i>&nbspDominio en uso</span>');
                    }
                    else
                    {
                        $('#crear_subasta').removeClass('disabled');
                        $("#Dominio").css("border", "1px solid green");
                        retorno.css("color", "white");
                        retorno.css("background", "green");
                        retorno.html('<span>&nbsp<i class="fa fa-check"></i>&nbspDominio disponible</span>');

                    }
                },
                error: function (Result) {
                    alert("Error");
                }


        });

        });
});
</script>

